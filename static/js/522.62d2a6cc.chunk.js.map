{"version":3,"file":"static/js/522.62d2a6cc.chunk.js","mappings":"yNAEaA,EAAaC,EAAAA,EAAAA,GAAS,mFAGxB,YAAO,SAALC,MAAiBC,QAAQ,EAAE,IAI3BC,EAAgBH,EAAAA,EAAAA,GAAS,oEACZ,YAAO,SAALC,MAAiBC,QAAQ,EAAE,IAAa,YAAO,SAALD,MAAiBC,QAAQ,EAAE,G,uLCPpFE,EAAaJ,EAAAA,EAAAA,KAAW,sFAMxBK,GAAaL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAY,8C,SCAhCO,EAAe,SAAH,GAAW,EAANC,OAAa,IAAD,IAI3BC,EAA2B,QAAvB,EAAiB,QAAjB,GAFOC,EAAAA,EAAAA,MAEKC,aAAK,aAAd,EAAgBC,YAAI,QAAI,IAGrC,GAA0BC,EAAAA,EAAAA,YAAU,eAA7BC,EAAK,KAAEC,EAAQ,KAEhBC,GAAYC,EAAAA,EAAAA,MAAZD,QAGDA,IACHA,EAAU,IAGKE,EAAAA,EAAAA,MAuBjB,OAnBAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAU,yCAAG,yFACjB,KACEC,EAAAA,EAAAA,eAAcL,GAASM,KAAKP,EAG9B,CAFE,SAAQQ,EAAQ,EAARA,SACRC,QAAQC,IAAIF,EAASG,KAAKC,QAC5B,CAAC,2CACF,kBANe,mCAOhBP,GACF,GAAG,CAACJ,IAGJQ,QAAQC,IAAIT,GAEZQ,QAAQC,IAAIX,IAKV,iCACE,UAACV,EAAU,YACT,SAACC,EAAU,CAACuB,GAAInB,EAAK,SAAC,aACtB,gBAAKoB,KAAKC,EAAAA,EAAAA,eAAmB,OAALhB,QAAK,IAALA,OAAK,EAALA,EAAOiB,aAAcC,IAAU,OAALlB,QAAK,IAALA,OAAK,EAALA,EAAOmB,SACzD,4BACE,0BAAU,OAALnB,QAAK,IAALA,OAAK,EAALA,EAAOmB,MAAM,KAAQ,OAALnB,QAAK,IAALA,OAAK,EAALA,EAAOoB,aAAaC,MAAM,EAAG,GAAG,QACrD,0BAA2B,IAAjB,OAALrB,QAAK,IAALA,OAAK,EAALA,EAAOsB,eAAmBC,QAAQ,GAAG,QAC1C,wBAAI,cACJ,uBAAS,OAALvB,QAAK,IAALA,OAAK,EAALA,EAAOwB,YACX,wBAAI,YACJ,SAAC,IAAU,UACH,OAALxB,QAAK,IAALA,OAAK,EAALA,EAAOyB,OAAOC,KAAI,SAACC,GAAK,OACvB,yBACE,uBAAS,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,QACR,OAGT,uBAAG,4BACH,UAAC,IAAU,YACT,yBACE,SAAC,KAAI,CAACd,GAAG,OAAOjB,MAAO,CAAEC,KAAMH,GAAO,SAAC,YAIzC,yBACE,SAAC,KAAI,CAACmB,GAAG,UAAUjB,MAAO,CAAEC,KAAMH,GAAO,SAAC,wBAOlD,SAAC,EAAAkC,SAAQ,CAACC,UAAU,SAACC,EAAA,EAAM,IAAI,UAC7B,SAAC,KAAM,QAMf,EAEAtC,EAAauC,aAAe,CAC1Bf,YAAagB,EAAAA,WAcf,O","sources":["pages/Movies/Cast/Cast.styled.jsx","pages/Movies/MovieDetails/MovieDetails.styled.jsx","pages/Movies/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from \"@emotion/styled\"\r\n\r\nexport const StyledList = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: ${({theme}) => theme.spacing(8)}px;\r\n`\r\n\r\n\r\nexport const StyledElement = styled.li`\r\n    width: calc((100% - ${({theme}) => theme.spacing(4)}px * 2) / ${({theme}) => theme.spacing(2)});\r\n`","import styled from \"@emotion/styled\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const StyledMain = styled.main`\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    gap: 50px;\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n    min-width: 60px;\r\n`","import PropTypes from 'prop-types';\r\nimport { getMoviesById, getMoviesList, getPosterPath, PLSHOLDER } from \"api-service/api\";\r\nimport { Suspense, useEffect, useState } from \"react\";\r\nimport { Link, Outlet, useLocation, useNavigate, useParams } from \"react-router-dom\";\r\nimport Loader from 'components/Loader';\r\nimport { StyledList } from '../Cast/Cast.styled';\r\nimport { StyledLink, StyledMain } from './MovieDetails.styled';\r\n\r\n\r\nconst MovieDetails = ({movies}) => {\r\n\r\n  const location = useLocation();\r\n\r\n  const back = location.state?.from ?? '/';\r\n\r\n\r\n  const [movie, setMovie] = useState();\r\n\r\n  let { movieId } = useParams();\r\n\r\n\r\n  if (!movieId) {\r\n    movieId = 0;\r\n  }\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchMovie = async() => {\r\n      try {\r\n        getMoviesById(movieId).then(setMovie)\r\n      } catch ({response}) {\r\n        console.log(response.data.message)\r\n      }\r\n    }\r\n    fetchMovie();\r\n  }, [movieId])\r\n  \r\n\r\n  console.log(movieId);\r\n\r\n  console.log(movie)\r\n\r\n\r\n  \r\n  return (\r\n    <>\r\n      <StyledMain>\r\n        <StyledLink to={back}>Go Back</StyledLink>\r\n        <img src={getPosterPath(movie?.poster_path)} alt={movie?.title} />\r\n        <div>\r\n          <h1>{movie?.title} ({movie?.release_date.slice(0, 4)})</h1>\r\n          <p>{(movie?.vote_average * 10).toFixed(0)}%</p>\r\n          <h2>Overview</h2>\r\n          <p>{movie?.overview}</p>\r\n          <h2>Genres</h2>\r\n          <StyledList>\r\n            {movie?.genres.map((genre) => (\r\n              <li>\r\n                <p>{genre?.name}</p>\r\n              </li>\r\n            ))}\r\n          </StyledList>\r\n          <p>Additional information</p>\r\n          <StyledList>\r\n            <li>\r\n              <Link to=\"cast\" state={{ from: back }}>\r\n                Cast\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"reviews\" state={{ from: back }}>\r\n                Reviews\r\n              </Link>\r\n            </li>\r\n          </StyledList>\r\n        </div>\r\n      </StyledMain>\r\n      <Suspense fallback={<Loader />}>\r\n        <Outlet />\r\n      </Suspense>\r\n    </>\r\n  );\r\n\r\n\r\n}\r\n\r\nMovieDetails.defaultProps = {\r\n  poster_path: PLSHOLDER\r\n}\r\n\r\nMovieDetails.propTypes = {\r\n  movie: PropTypes.shape({\r\n    poster_path: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    release_date: PropTypes.string.isRequired,\r\n    vote_average: PropTypes.number.isRequired,\r\n    genres: PropTypes.string.isRequired,\r\n    overview: PropTypes.string.isRequired\r\n  })\r\n}\r\n\r\nexport default MovieDetails;"],"names":["StyledList","styled","theme","spacing","StyledElement","StyledMain","StyledLink","Link","MovieDetails","movies","back","useLocation","state","from","useState","movie","setMovie","movieId","useParams","useNavigate","useEffect","fetchMovie","getMoviesById","then","response","console","log","data","message","to","src","getPosterPath","poster_path","alt","title","release_date","slice","vote_average","toFixed","overview","genres","map","genre","name","Suspense","fallback","Loader","defaultProps","PLSHOLDER"],"sourceRoot":""}