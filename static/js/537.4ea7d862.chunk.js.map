{"version":3,"file":"static/js/537.4ea7d862.chunk.js","mappings":"kPAgCA,EA3BmB,SAAH,GAAoB,IAAdA,EAAM,EAANA,OAEdC,GAAWC,EAAAA,EAAAA,MAOf,OANEC,QAAQC,IAAIJ,IAOZ,wBACGA,EAAOK,KAAI,SAACC,GAAK,OAChB,yBACE,SAAC,KAAI,CAACC,GAAE,UAAU,OAALD,QAAK,IAALA,OAAK,EAALA,EAAOE,IAAMC,MAAO,CAACC,KAAMT,GAAU,SAAO,OAALK,QAAK,IAALA,OAAK,EAALA,EAAOK,kBAD/C,OAALL,QAAK,IAALA,OAAK,EAALA,EAAOE,GAEX,KAIf,ECHA,EAhBqB,SAAH,GAAoB,IAAfI,EAAQ,EAARA,SAEnB,OAAO,iBAAMA,SAAUA,EAAS,UAC5B,8BACA,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,WAAS,KACzC,mBAAQF,KAAK,SAAQ,SAAC,eAG9B,E,UCsCA,EA3Ce,WACX,OAA4BG,EAAAA,EAAAA,UAAS,IAAG,eAAjChB,EAAM,KAAEiB,EAAS,KACxB,GAA4BD,EAAAA,EAAAA,UAAS,QAAO,eAArCE,EAAM,KAAEC,EAAS,KAExB,GAAwCC,EAAAA,EAAAA,MAAiB,eAAlDC,EAAY,KAAEC,EAAe,KAE9BC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACDF,KAILG,EAAAA,EAAAA,WAAUH,GAAOI,MAAK,SAAAC,GAClB,GAAwB,IAApBA,EAASC,OAIT,OAHAV,EAAU,YACVG,EAAgB,CAAEC,MAAO,UACzBO,MAAM,kDAGVb,GAAU,OAAIW,GAClB,IACAT,EAAU,aAEd,GAAG,CAACI,IAEJpB,QAAQC,IAAIJ,GASZ,OAAO,iCACH,SAAC,EAAY,CAACY,SARG,SAACmB,GAClBA,EAAEC,iBACF,IAAIT,EAAQQ,EAAEE,OAAOC,SAASX,MAAMY,MAEpCb,EAAgB,CAACC,MAAOA,GAC5B,IAKgB,aAAXL,IAAyB,yBAAK,oDAC/B,SAAC,EAAU,CAAClB,OAAQA,MAE5B,C","sources":["components/MoviesList/MoviesList.jsx","pages/SearchMovies/SearchMovies.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { getMovieId } from \"api-service/api\";\r\nimport { Link, useLocation, useParams } from \"react-router-dom\";\r\n\r\n\r\nconst MoviesList = ({ movies }) => {\r\n\r\n  const location = useLocation();\r\n      console.log(movies);\r\n\r\n      // const mappedMovies = movies.map(movie => movieId === movie.id)\r\n\r\n      // console.log(mappedMovies);\r\n    \r\n    return (\r\n      <ul>\r\n        {movies.map((movie) => (\r\n          <li key={movie?.id}>\r\n            <Link to={`${movie?.id}`} state={{from: location}}>{movie?.original_title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n}\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    original_title: PropTypes.string.isRequired\r\n  }))\r\n}\r\n\r\nexport default MoviesList;","import PropTypes from 'prop-types';\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\n\r\nconst SearchMovies = ({onSubmit}) => {\r\n\r\n    return <form onSubmit={onSubmit}>\r\n        <label>\r\n        <input type=\"name\" name=\"query\" autoFocus />\r\n        <button type=\"submit\">Submit</button>\r\n        </label>\r\n      </form>\r\n}\r\n\r\nSearchMovies.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\n\r\nexport default SearchMovies;","import { getMovies } from \"api-service/api\";\r\nimport MoviesList from \"components/MoviesList\";\r\nimport SearchMovies from \"pages/SearchMovies\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\n\r\nconst Movies = () => {\r\n    const [movies, setMovies] = useState([]);\r\n    const [status, setStatus] = useState(\"idle\");\r\n\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n    const query = searchParams.get(\"query\");\r\n\r\n    useEffect(() => {\r\n        if (!query) {\r\n            return;\r\n        }\r\n\r\n        getMovies(query).then(response => {\r\n            if (response.length === 0) {\r\n                setStatus(\"rejected\")\r\n                setSearchParams({ query: \"\"})\r\n                alert(\"An error occured while processing your request\")\r\n                return;\r\n            }\r\n            setMovies([...response])\r\n        })\r\n        setStatus(\"fulfilled\")\r\n\r\n    }, [query])\r\n\r\n    console.log(movies)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let query = e.target.elements.query.value;\r\n\r\n        setSearchParams({query: query})\r\n    };\r\n    \r\n    return <>\r\n        <SearchMovies onSubmit={handleSubmit} />\r\n\r\n        {status === \"rejected\" && <div>An error occured while processing your request</div>}\r\n        <MoviesList movies={movies} />\r\n    </>\r\n}\r\n\r\nexport default Movies;"],"names":["movies","location","useLocation","console","log","map","movie","to","id","state","from","original_title","onSubmit","type","name","autoFocus","useState","setMovies","status","setStatus","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getMovies","then","response","length","alert","e","preventDefault","target","elements","value"],"sourceRoot":""}