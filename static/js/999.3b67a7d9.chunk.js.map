{"version":3,"file":"static/js/999.3b67a7d9.chunk.js","mappings":"yNAEaA,EAAaC,EAAAA,EAAAA,GAAS,mFAGxB,YAAO,SAALC,MAAiBC,QAAQ,EAAE,IAI3BC,EAAgBH,EAAAA,EAAAA,GAAS,oEACZ,YAAO,SAALC,MAAiBC,QAAQ,EAAE,IAAa,YAAO,SAALD,MAAiBC,QAAQ,EAAE,G,wHCTjG,EAAqCE,EAAQ,KAArCC,EAAa,EAAbA,cAAeC,EAAS,EAATA,UAGjBC,EAAc,SAAH,OAAKC,EAAK,EAALA,MAAK,OACzB,iCACE,gBAAKC,IAAKJ,EAAmB,OAALG,QAAK,IAALA,OAAK,EAALA,EAAOE,cAAeC,IAAU,OAALH,QAAK,IAALA,OAAK,EAALA,EAAOI,iBAC1D,uBAAS,OAALJ,QAAK,IAALA,OAAK,EAALA,EAAOI,iBACX,uBAAS,OAALJ,QAAK,IAALA,OAAK,EAALA,EAAOK,cACV,EAGLN,EAAYO,aAAe,CACzBJ,aAAcJ,EACdO,UAAW,sBAWb,I,8BCjBME,EAAO,WACT,OAA4BC,EAAAA,EAAAA,UAAS,IAAG,eAAjCC,EAAM,KAAEC,EAAS,KAChBC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBR,OAfAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAS,yCAAG,yFACd,KACIC,EAAAA,EAAAA,cAAaJ,GAASK,KAAKN,EAG/B,CAFE,SAAQO,EAAQ,EAARA,SACNC,QAAQC,IAAIF,EAASG,KAAKC,QAC9B,CAAC,2CACJ,kBANc,mCAOfP,GACJ,GAAG,CAACH,IAEJO,QAAQC,IAAIV,IAIL,SAAC,IAAU,UAAEA,EAAOa,KAAI,SAAAC,GAAK,OAAI,UAAC,IAAa,YAClD,gBAAKtB,IAAW,OAALsB,QAAK,IAALA,GAAAA,EAAOrB,cAA2BL,EAAAA,EAAAA,eAAmB,OAAL0B,QAAK,IAALA,OAAK,EAALA,EAAOrB,cAAjCJ,EAAAA,UAAgDK,IAAU,OAALoB,QAAK,IAALA,OAAK,EAALA,EAAOnB,cAAeoB,MAAM,MAAMC,OAAO,SAC/H,uBAAS,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOnB,gBAAkB,KAAC,mBAC9B,uBAAS,OAALmB,QAAK,IAALA,OAAK,EAALA,EAAOlB,cAHkD,OAALkB,QAAK,IAALA,OAAK,EAALA,EAAOG,GAInD,KACpB,EAEAnB,EAAKD,aAAe,CAChBJ,aAAcJ,EAAAA,UACdO,UAAW,sBAYf,O","sources":["pages/Movies/Cast/Cast.styled.jsx","components/CastList/CastElement/CastElement.jsx","pages/Movies/Cast/Cast.jsx"],"sourcesContent":["import styled from \"@emotion/styled\"\r\n\r\nexport const StyledList = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: ${({theme}) => theme.spacing(8)}px;\r\n`\r\n\r\n\r\nexport const StyledElement = styled.li`\r\n    width: calc((100% - ${({theme}) => theme.spacing(4)}px * 2) / ${({theme}) => theme.spacing(2)});\r\n`","import PropTypes from 'prop-types';\r\nconst { getPosterPath, PLSHOLDER } = require(\"api-service/api\");\r\n\r\n\r\nconst CastElement = ({movie}) => (\r\n  <>\r\n    <img src={getPosterPath(movie?.profile_path)} alt={movie?.original_name} />\r\n    <p>{movie?.original_name}</p>\r\n    <p>{movie?.character}</p>\r\n  </>\r\n);\r\n\r\nCastElement.defaultProps = {\r\n  profile_path: PLSHOLDER,\r\n  character: \"Wasn't a character\"\r\n}\r\n\r\nCastElement.propTypes = {\r\n  movie: PropTypes.shape({\r\n    profile_path: PropTypes.string,\r\n    original_name: PropTypes.string.isRequired,\r\n    character: PropTypes.string\r\n  })\r\n}\r\n\r\nexport default CastElement;","import PropTypes from 'prop-types';\r\nimport { getMovieCast, getPosterPath, PLSHOLDER } from \"api-service/api\";\r\nimport CastList from \"components/CastList\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\nimport { StyledElement, StyledList } from \"./Cast.styled\";\r\n\r\n\r\nconst Cast = () => {\r\n    const [actors, setMovies] = useState([]);\r\n    const { movieId } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchCast = async () => {\r\n            try {\r\n                getMovieCast(movieId).then(setMovies);\r\n            } catch ({response}) {\r\n                console.log(response.data.message);\r\n            }\r\n        }\r\n        fetchCast();\r\n    }, [movieId])\r\n\r\n    console.log(actors)\r\n\r\n\r\n\r\n    return <StyledList>{actors.map(actor => <StyledElement key={actor?.id}>\r\n        <img src={!actor?.profile_path ? PLSHOLDER : getPosterPath(actor?.profile_path)} alt={actor?.original_name} width=\"200\" height=\"300\"/>\r\n        <p>{actor?.original_name}</p> <br />\r\n        <p>{actor?.character}</p>\r\n    </StyledElement>)}</StyledList>\r\n}\r\n\r\nCast.defaultProps = {\r\n    profile_path: PLSHOLDER,\r\n    character: \"Wasn't a character\"\r\n}\r\n\r\nCast.propTypes = {\r\n    movies: PropTypes.arrayOf(PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        profile_path: PropTypes.string,\r\n        original_name: PropTypes.string.isRequired,\r\n        character: PropTypes.string,\r\n    }))\r\n}\r\n\r\nexport default Cast;"],"names":["StyledList","styled","theme","spacing","StyledElement","require","getPosterPath","PLSHOLDER","CastElement","movie","src","profile_path","alt","original_name","character","defaultProps","Cast","useState","actors","setMovies","movieId","useParams","useEffect","fetchCast","getMovieCast","then","response","console","log","data","message","map","actor","width","height","id"],"sourceRoot":""}